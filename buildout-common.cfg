# LAMP FCGI configuration buildout
# ======================================
# 
# This buildout configures a LAMP virtual host with fcgi and a user driven mysql
# database server. It's tested with Debian 6.0 and Ubuntu 10.4. 
# The configuration is fully contained within this buildout. Hostnames, ports
# and common options can be changed in the buildout sections at the top of
# of this file.
# 
# Apparmor users (ubuntu): mind adding the new mysql database path.
#
# Supervisord starts the mysql server. You can manually start the mysql server with 
# sudo -u username bin/mysqld_safe_run_as_user.
# The virtual host config is linked to /etc/apache2/sites-available and enabled.
#
# The log rotation configuration file is in parts/logrotate.conf and this needs to be symlinked into the
# main logrotate configuration.    
# 
# Install
# ----------
#
# Install depencencies:
#    $ aptitude install git wget python libapache2-mod-fcgid php5-cgi apache2 apache2-mpm-worker apache2-suexec mysql-server-5.1
#
# Load apache modules:
#    $ a2enmod fcgid
#    $ a2enmod suexec 
#
# To run the buildout do the following as root:
#    $ cd /var/www
#    $ mkdir buildout_dir
#    $ cd buildout_dir
#    $ python bootstrap.py
#    $ bin/buildout -c buildout-common.cfg
# To start mysql run:
#    $ bin/supervisorctl start mysql
#
# Update
# -------------
#
# To make changes you can edit the options on top of this file and the config template files (./templates)
# Then rerun the buildout part you have changed:
#    $ bin/buildout -Nc buildout-common.cfg install partname
# You can change the config files directly (see part generated-config-files), but all changes are lost 
# if you run buildout again. To make custom changes you should extend this buildout.
#                          

[buildout]
parts =
    adduser
    php-conf
    vhost-conf 
    mycnf-conf
    fcgi-start
    mysqld_safe
    mysql-bin
    mysql-admin
    omelette
    supervisor 
    userdirs
    automysqlbackup-conf
    automysqlbackup
#    crontab_reboot                                                                               
#    crontab_mysql_backup_daily                                                                          
#    crontab_mysql_backup_weekly                                                                          
    logrotate_conf
    mysql_install_db
    vhost-install 

[userdata]
name = test
apache_user_name = www-data
servername = localhost
serveralias = localhost
serveradmin = admin@test.de
mysql_pwd = password
mysql_database = ${userdata:name}
mysql_user = root
ssl_cert = ${buildout:directory}/etc/${userdata:servername}.pem

[ports] 
mysql = 9003
supervisor = 9010

[install-paths] 
vhosts = /etc/apache2/sites-available
vhosts_enabled = /etc/apache2/sites-enabled

[generated-config-files]
vhost =  ${buildout:directory}/etc/vhost.conf
phpini =  ${buildout:directory}/etc/php.ini
supervisor =  ${buildout:directory}/parts/supervisor/supervisor.conf
logrotate =  ${buildout:directory}/parts/logrotate.conf

[binaries]
mysql= /usr/bin
php = /usr/bin
php_modules = /usr/lib/php5/20090626

##############################################################################  
# Config files 
##############################################################################  
  
[php-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/php.ini.in
output = ${buildout:directory}/etc/php.ini 

[vhost-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/vhost.conf.in
output = ${buildout:directory}/etc/vhost.conf

[mycnf]
basedir= /usr
datadir=${buildout:directory}/var
pid=${mycnf:datadir}/mysql.pid
err = ${buildout:directory}/logs/mysql.err
sock = ${mycnf:datadir}/mysql.sock
user =  ${userdata:name}
opt = --defaults-file=${mycnf-conf:output} --pid-file=${mycnf:pid} --skip-syslog  

[mycnf-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/my.cnf.in
output = ${buildout:directory}/etc/my.cnf
 
[automysqlbackup-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/automysqlbackup.conf.in
output = ${buildout:directory}/etc/automysqlbackup.conf

##############################################################################  
# Start scripts 
##############################################################################  

[fcgi-start]
recipe = plone.recipe.command
stop-on-error = false
command =  
#make php fcgi start script
    mkdir ${buildout:directory}/bin
    cat > ${buildout:directory}/bin/php-fcgi-starter << EOF
    #!/bin/sh
    PHPRC="${buildout:directory}/etc/"
    export PHPRC
    export TMPDIR=${buildout:directory}/tmp 
    exec ${binaries:php}/php5-cgi
    EOF  
    chmod 750 ${buildout:directory}/bin/php-fcgi-starter
#set immutable flag to protect it
    chattr +i -V ${buildout:directory}/bin/php-fcgi-starter

[mysql-bin]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/mysql.in
output = ${buildout:directory}/bin/mysql

[mysql-admin]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/mysqladmin.in
output = ${buildout:directory}/bin/mysqladmin

[mysqld_safe]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/mysqld_safe_run_as_user.in
output = ${buildout:directory}/bin/mysqld_safe_run_as_user

[automysqlbackup]
recipe = hexagonit.recipe.download
download-only = true
url = http://downloads.sourceforge.net/project/automysqlbackup/AutoMySQLBackup/AutoMySQLBackup%20VER%202.5/automysqlbackup-2.5.1-01.sh 
ignore-existing = true
destination = ${buildout:directory}/bin
filename = automysqlbackup

##############################################################################  
#Access rights, Directories, installed php scripts
##############################################################################  

[userdirs]
recipe = plone.recipe.command
stop-on-error = false
command =  
#make dirs
    mkdir -p ${buildout:directory}/etc
    mkdir ${buildout:directory}/htdocs
    mkdir ${buildout:directory}/logs
    mkdir ${buildout:directory}/tmp
    mkdir ${buildout:directory}/bin
    mkdir ${buildout:directory}/backups
    chown root:${userdata:name} ${buildout:directory}
    chmod 750 ${buildout:directory}
    chown ${userdata:name}:${userdata:name} ${buildout:directory}/*
    chmod 750 ${buildout:directory}/*
    chmod 550 /${buildout:directory}/etc
    chmod a+x /${buildout:directory}/bin/*
    chown ${userdata:name}:${userdata:name} ${buildout:directory}/etc/php.ini
    chown -R ${userdata:name}:${userdata:name} ${buildout:directory}/htdocs
#take care supervisor pidproxy  is executalbe
    chmod a+x ${supervisor:pp}
#protect config files
    chmod 440 ${buildout:directory}/etc/php.ini
    chmod 440 ${buildout:directory}/etc/vhost.conf
    chmod 440 ${buildout:directory}/etc/my.cnf
    chmod 440 ${buildout:directory}/etc/automysqlbackup.conf
    chmod 660 ${buildout:directory}/*.cfg
    chattr -i -V ${buildout:directory}/bin/php-fcgi-starter
    chown ${userdata:name}:${userdata:name} ${buildout:directory}/etc/my.cnf
    chown ${userdata:name}:${userdata:name} ${buildout:directory}/bin/php-fcgi-starter
    chattr +i -V ${buildout:directory}/bin/php-fcgi-starter
#wordpress upload
    mkdir -p htdocs/wp-content/uploads
    chown ${userdata:apache_user_name}:${userdata:apache_user_name} htdocs/wp-content/uploads
update-command = ${userdirs:command}

#######################################################################################
#Install scripts
#######################################################################################

[adduser]
recipe = plone.recipe.command
command =  
	adduser ${userdata:name} --home ${buildout:directory}
	adduser ${userdata:apache_user_name} ${userdata:name}

[vhost-install]  
recipe = plone.recipe.command
command = 
    ln -s ${buildout:directory}/etc/vhost.conf ${install-paths:vhosts}/${userdata:servername}
# Activate apache vhost conf
#    a2ensite ${userdata:servername}
# We install now a self-certified root certificat. If you don't wan't to hit cancel.
#    /usr/sbin/make-ssl-cert /usr/share/ssl-cert/ssleay.cnf ${userdata:ssl_cert}

location = 
	${install-paths:vhosts}/${userdata:servername}
	${install-paths:vhosts_enabled}/${userdata:servername}

[mysql_install_db]
recipe = plone.recipe.command
command = 
    chown -R ${userdata:name}:${userdata:name} ${buildout:directory}/var
    sudo -u  ${userdata:name} ${binaries:mysql}/mysql_install_db --datadir=${mycnf:datadir} --user=${userdata:name} --log=${buildout:directory}/logs
    echo "---------------------------------------------------------------------"
    echo "When you have problems running mysqld mind appamor and access rights."
    echo ""
    echo "Starting superpervisor/mysqld to set up password and create database."
    [ ! -f ${mycnf:sock} ] && ./bin/supervisord  && sleep 5
    [ -f  ${mycnf:pid} ] &&  ${binaries:mysql}/mysqladmin --socket=${mycnf:sock} -u root password "${userdata:mysql_pwd}"
    [ -f  ${mycnf:pid} ] &&  ${buildout:directory}/bin/mysqladmin create '${userdata:mysql_database}'
    ./bin/supervisorctl shutdown
#update-command=${mysql_install_db:command}

#Supervisor to start the mysql server
[omelette]
recipe = collective.recipe.omelette
eggs = supervisor

[supervisor]
recipe = collective.recipe.supervisor
port = 127.0.0.1:${ports:supervisor}
user = super
password = super_pwd
pp = ${buildout:directory}/parts/omelette/supervisor/pidproxy.py
programs =
    10 mysql ${supervisor:pp} [ ${mycnf:pid} ${binaries:mysql}/mysqld_safe ${mycnf:opt} ] true ${userdata:name}

####################################################
# Configure general Crontab commands                                                           
####################################################
                                                                                               
#on reboot start supervisord which in turn starts all other server                          
#[crontab_reboot]                                                                               
#recipe = z3c.recipe.usercrontab                                                                
#times = @reboot                                                                                
#command = ${buildout:directory}/bin/supervisord                                                
                                                                                               
#daily mysql backup                                                                            
#[crontab_mysql_backup_daily]                                                                          
#recipe = z3c.recipe.usercrontab                                                                
#times = 0 1 * * *                                                                              
#command = ${buildout:directory}/bin/automysqlbackup -c ${buildout:directory}/etc/automysqlbackup.conf

#weekly mysql backup                                                                            
#[crontab_mysql_backup_weekly]                                                                          
#recipe = z3c.recipe.usercrontab                                                                
#times = 0 2 * * 6                                                                              
#command = ${buildout:directory}/bin/automysqlbackup -c ${buildout:directory}/etc/automysqlbackup.conf

# weekly remove old backups                
#[crontab_backup_removeold]                                                                              
#recipe = z3c.recipe.usercrontab                                                                
#times = 0 0 * * 6                                                                              
#command = ${buildout:directory}/bin/                                                    
                                                                                               
# daily rsync backup                                                                            
#[crontab_rsync_backup]                                                                          
#recipe = z3c.recipe.usercrontab                                                                
#times = 5 0 * * *                                                                              
#command = rsync -a ${buildout:directory}/var/blobstorage ${buildout:directory}/var/blobbackup 

##############################################################################  
# Log rotation
##############################################################################

[logrotate_conf]
recipe = zc.recipe.deployment:configuration
text = 
    create 640 ${userdata:name} root
    compress 
    sharedscripts
    missingok 

    ${buildout:directory}/logs/mysql-error.log ${buildout:directory}/logs/mysql-slow.log ${buildout:directory}/logs/mysql.log {
        daily
        rotate 7
        postrotate
            test -x ${buildout:directory}/bin/mysqladmin || exit 0
            if [ -z "`${buildout:directory}/bin/mysqladmin ping 2>/dev/null`" ]; then
              if killall -q -s0 -umysql mysqld; then
                exit 1
              fi 
            else
              ${buildout:directory}/bin/mysqladmin flush-logs
            fi
        endscript
    }

    ${buildout:directory}/logs/error.log ${buildout:directory}/logs/access.log {
        weekly
        rotate 52
        delaycompress
        notifempty
        postrotate
            /etc/init.d/apache2 reload > /dev/null
        endscript
    }


